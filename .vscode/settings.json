{
    "workbench.sideBar.location": "right",
    "code-runner.showExecutionMessage": false,
    "window.zoomLevel": 2,
    "code-runner.runInTerminal": true,
    "code-runner.clearPreviousOutput": true,
    "code-runner.customCommand": "",
    "code-runner.ignoreSelection": true,
    "debug.terminal.clearBeforeReusing": true,
    "terminal.integrated.lineHeight": 2,
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "code-runner.executorMap": {
        "javascript": "node",
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "cpp": "cls && function prompt{\"SIAM\"} && $Host.ui.rawui.foregroundcolor = \"cyan\"  && cd $dir && g++  $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt && echo `n && $Host.ui.rawui.foregroundcolor = \"red\"",
        "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "php": "php",
        "python": "python -u",
        "perl": "perl",
        "perl6": "perl6",
        "ruby": "ruby",
        "go": "go run",
        "lua": "lua",
        "groovy": "groovy",
        "powershell": "powershell -ExecutionPolicy ByPass -File",
        "bat": "cmd /c",
        "shellscript": "bash",
        "fsharp": "fsi",
        "csharp": "scriptcs",
        "vbscript": "cscript //Nologo",
        "typescript": "ts-node",
        "coffeescript": "coffee",
        "scala": "scala",
        "swift": "swift",
        "julia": "julia",
        "crystal": "crystal",
        "ocaml": "ocaml",
        "r": "Rscript",
        "applescript": "osascript",
        "clojure": "lein exec",
        "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
        "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
        "racket": "racket",
        "scheme": "csi -script",
        "ahk": "autohotkey",
        "autoit": "autoit3",
        "dart": "dart",
        "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        "haskell": "runhaskell",
        "nim": "nim compile --verbosity:0 --hints:off --run",
        "lisp": "sbcl --script",
        "kit": "kitc --run",
        "v": "v run",
        "sass": "sass --style expanded",
        "scss": "scss --style expanded",
        "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
        "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
    },
    "remoteHub.commitDirectlyWarning": "off",
    "git.confirmSync": true,
    "git.enableSmartCommit": true,
    "git.autofetch": true,
    "git.postCommitCommand": "push",
    "gitlens.codeLens.recentChange.command": false,
    "code-auto-commit.commitTimeInterval": 5,
    "explorer.confirmDelete": false,
    "GitCommitPlugin.MaxSubjectWords": 10,
    "gaac.forceLowerCase": true,
    "settingsSync.ignoredExtensions": [
        "codesync.codesync"
    ],
    "githubPullRequests.queries": [
        {
            "label": "Waiting For My Review",
            "query": "is:open review-requested:${user}"
        },
        {
            "label": "Assigned To Me",
            "query": "is:open assignee:${user}"
        },
        {
            "label": "Created By Me",
            "query": "is:open author:${user}"
        }
    ],
    "grunt.autoDetect": "on",
    "code-auto-commit.autoPush": true,
    "filewatcher.commands": [
        {
            "match": "\\jjj.cpp*",
            "isAsync": true,
            "cmd": "echo '${file} file contant change'",
            "event": "onFolderChange"
        }
    ],
    "triggerTaskOnSave.tasks": {
        "build": [
            "src/*.h",
            "src/*.cpp"
        ]
    },
    "triggerTaskOnSave.selectedTask": "AUTO--push",
    "triggerTaskOnSave.showStatusBarToggle": true,
    "triggerTaskOnSave.on": true,
    "triggerTaskOnSave.showNotifications": true,
    "triggerTaskOnSave.failureColour": "#ff000040",
    "watch-run.targetList": [
        {
             "target": "**/*.cpp",
            "task": "AUTO--push"
        }
    ]
}